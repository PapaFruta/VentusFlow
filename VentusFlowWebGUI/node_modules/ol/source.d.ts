/**
 * Creates a sources function from a tile grid. This function can be used as value for the
 * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.
 * @param {import("./tilegrid/TileGrid.js").default} tileGrid Tile grid.
 * @param {function(import("./tilecoord.js").TileCoord): import("./source/Source.js").default} factory Source factory.
 * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a
 * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with
 * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid
 * `tileGrid` that `sourcesFromTileGrid` was called with.
 * @return {function(import("./extent.js").Extent, number): Array<import("./source/Source.js").default>} Sources function.
 * @api
 */
export function sourcesFromTileGrid(tileGrid: import("ol/tilegrid/TileGrid").default, factory: (arg0: import("ol/tilecoord").TileCoord) => import("ol/source/Source").default): (arg0: import("ol/extent").Extent, arg1: number) => Array<import("ol/source/Source").default>;
export { default as BingMaps } from "ol/source/BingMaps";
export { default as CartoDB } from "ol/source/CartoDB";
export { default as Cluster } from "ol/source/Cluster";
export { default as DataTile } from "ol/source/DataTile";
export { default as GeoTIFF } from "ol/source/GeoTIFF";
export { default as Google } from "ol/source/Google";
export { default as IIIF } from "ol/source/IIIF";
export { default as Image } from "ol/source/Image";
export { default as ImageArcGISRest } from "ol/source/ImageArcGISRest";
export { default as ImageCanvas } from "ol/source/ImageCanvas";
export { default as ImageMapGuide } from "ol/source/ImageMapGuide";
export { default as ImageStatic } from "ol/source/ImageStatic";
export { default as ImageTile } from "ol/source/ImageTile";
export { default as ImageWMS } from "ol/source/ImageWMS";
export { default as OGCMapTile } from "ol/source/OGCMapTile";
export { default as OGCVectorTile } from "ol/source/OGCVectorTile";
export { default as OSM } from "ol/source/OSM";
export { default as Raster } from "ol/source/Raster";
export { default as Source } from "ol/source/Source";
export { default as StadiaMaps } from "ol/source/StadiaMaps";
export { default as Tile } from "ol/source/Tile";
export { default as TileArcGISRest } from "ol/source/TileArcGISRest";
export { default as TileDebug } from "ol/source/TileDebug";
export { default as TileImage } from "ol/source/TileImage";
export { default as TileJSON } from "ol/source/TileJSON";
export { default as TileWMS } from "ol/source/TileWMS";
export { default as UrlTile } from "ol/source/UrlTile";
export { default as UTFGrid } from "ol/source/UTFGrid";
export { default as Vector } from "ol/source/Vector";
export { default as VectorTile } from "ol/source/VectorTile";
export { default as WMTS } from "ol/source/WMTS";
export { default as XYZ } from "ol/source/XYZ";
export { default as Zoomify } from "ol/source/Zoomify";
export { createLoader as createWMSLoader } from "ol/source/wms";
export { createLoader as createArcGISRestLoader } from "ol/source/arcgisRest";
export { createLoader as createStaticLoader } from "ol/source/static";
export { createLoader as createMapGuideLoader } from "ol/source/mapguide";
//# sourceMappingURL=source.d.ts.map